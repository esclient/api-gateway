type Query {
    getComments(input: GetCommentsInput!): [Comment]
}

type Comment {
    id: ID!
    author_id: ID!
    text: String!
    created_at: Int!
    edited_at: Int
}

type CreateModPayload {
    mod_id: ID!
    upload_url: String!
    s3_key: String!
}

type Mutation {
    createComment(input: CreateCommentInput!): ID!
    editComment(input: EditCommentInput!): Boolean!
    deleteComment(input: DeleteCommentInput!): Boolean!
    addRate(input: AddRateInput!): ID!
    createMod(input: CreateModInput!): CreateModPayload!
    confirmUpload(input: UploadModInput!): Boolean!
}

enum Rate {
    RATE_UNSPECIFIED
    RATE_1
    RATE_2
    RATE_3
    RATE_4
    RATE_5
}

input AddRateInput {
    mod_id: ID!
    author_id: ID!
    rate: Rate!
}

input GetCommentsInput {
    mod_id: ID!
}

input CreateCommentInput {
    mod_id: Int!
    author_id: Int!
    text: String!
}

input EditCommentInput {
    comment_id: Int!
    text: String!
}

input DeleteCommentInput {
    comment_id: Int!
}

input CreateModInput {
    mod_title: String!
    author_id: Int!
    filename: String!
    description: String!
}

input UploadModInput {
    mod_id: ID!
}
