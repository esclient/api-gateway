type Query {
    getComments(input: GetCommentsInput!): [Comment]
}

type Comment {
    id: ID!
    author_id: ID!
    text: String!
    created_at: Int!
    edited_at: Int
}

type Mutation {
    createComment(input: CreateCommentInput!): ID!
    editComment(input: EditCommentInput!): Boolean!
    deleteComment(input: DeleteCommentInput!): Boolean!
    addRate(input: AddRateInput!): ID!
}

enum Rate {
    RATE_UNSPECIFIED = 0;
    RATE_1 = 1;
    RATE_2 = 2;
    RATE_3 = 3;
    RATE_4 = 4;
    RATE_5 = 5;
}

input AddRateInput {
    mod_id: ID!
    author_id: ID!
    rate: Rate!
}

input GetCommentsInput {
    mod_id: ID!
}

input CreateCommentInput {
    mod_id: Int!
    author_id: Int!
    text: String!
}

input EditCommentInput {
    comment_id: Int!
    text: String!
}

input DeleteCommentInput {
    comment_id: Int!
}


